# -*- coding: utf-8 -*-
"""DS_&_ML_TASK_NO_3_MANISH_KUMAR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QrY9eLlH70fxLxSnPAx0Un8U56miKnb6
"""

# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.preprocessing import StandardScaler
from pandas.plotting import parallel_coordinates

# Load the Iris dataset
iris = load_iris()

# Convert the dataset into a DataFrame for easier manipulation
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)

# Add the target variable (species) to the DataFrame
df['species'] = pd.Categorical.from_codes(iris.target, iris.target_names)

# Display the first few rows to get an overview of the dataset
df.head()

# Standardizing the features to bring them to the same scale
scaler = StandardScaler()

# Create a new DataFrame to store the scaled data
df_scaled = df.copy()

# Apply scaling to the features (exclude the target variable 'species')
df_scaled[df.columns[:-1]] = scaler.fit_transform(df[df.columns[:-1]])

# Display the scaled data
df_scaled.head()

# Plot the parallel coordinates
plt.figure(figsize=(12, 6))

# Parallel coordinates plot using 'species' as the class variable for coloring
parallel_coordinates(df_scaled, 'species', color=plt.cm.viridis(np.linspace(0, 1, len(df['species'].unique()))))

# Title and labels
plt.title('Parallel Coordinates Plot for Iris Dataset', fontsize=16)
plt.xlabel('Features', fontsize=12)
plt.ylabel('Scaled Value', fontsize=12)
plt.grid(True)

# Show the plot
plt.show()



